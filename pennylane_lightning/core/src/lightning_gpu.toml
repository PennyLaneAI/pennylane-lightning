schema = 1

[device]
name = "lightning.gpu"
precision = ['float32', 'float64']

[operations]
observables = [
        "PauliX",
        "PauliY",
        "PauliZ",
        "Hadamard",
        "SparseHamiltonian",
        "Hamiltonian",
        "Hermitian",
        "Identity",
        "Sum",
        "Prod",
        "SProd",
]

# These are gates that do not need decomposition.
# Also gates which are natively supported by the device.
[[operations.gates]]
native = [
        "Identity",
        "PauliX",
        "PauliY",
        "PauliZ",
        "Hadamard",
        "S",
        "T",
        "PhaseShift",
        "RX",
        "RY",
        "RZ",
        "Rot",
        "CNOT",
        "CY",
        "CZ",
        "SWAP",
        "CSWAP",
        "Toffoli",
        "IsingXX",
        "IsingXY",
        "IsingYY",
        "IsingZZ",
        "ControlledPhaseShift",
        "CRX",
        "CRY",
        "CRZ",
        "CRot",
        "SingleExcitation",
        "SingleExcitationPlus",
        "SingleExcitationMinus",
        "DoubleExcitation",
        "DoubleExcitationPlus",
        "DoubleExcitationMinus",
        "MultiRZ",

	# QubitUnitary is technically
	# "applyMatrix", but it doesn't
	# belong in matrix gates.
        "QubitUnitary",

	# All adjoint operations in lightning_kokkos
	# are applied via the inverse flag.
        "Adjoint(S)",
        "Adjoint(T)",
        "Adjoint(SX)",
        "Adjoint(ISWAP)",
        "Adjoint(SISWAP)",
]

# Gates listed in qml.device.ops
# which the authors of this file would like to be decomposed
# according to rules outlined in the decomposition strategy for each
# operation.
decomp = [
        "BasisState",
        "ECR",
        "QubitStateVector",
        "StatePrep",
        "ControlledQubitUnitary",
        "DiagonalQubitUnitary",
        "SX",
        "ISWAP",
        "PSWAP",
        "SISWAP",
        "SQISW",
        "CPhase",
        "QubitCarry",
        "QubitSum",
        "OrbitalRotation",
        "QFT",
]

# Gates listed in qml.device.ops
# which the authors of this file would like to be decomposed into QubitUnitary.
matrix = [
        "MultiControlledX",
]

[measurements]
exactshots = [
	"Expval",
	"Var",
	"Probs",
	"State",
]
finiteshots = [
	"Expval",
	"Var",
	"Probs",
	"Sample",
	"Counts",
]

[compilation]
qjit_compatible = false
runtime_code_generation = false
adjoint = false
quantum_control = false
mid_circuit_measurement = false
dynamic_qubit_management = false 
