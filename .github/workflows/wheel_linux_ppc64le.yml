name: Wheel::Linux::PowerPC
on:
  push:
    branches:
      - master
  release:
    types: [published]

env:
  CIBW_BUILD: 'cp37-* cp38-* cp39-* cp310-*'
  CIBW_SKIP: "*-musllinux*"

  # Python build settings
  CIBW_BEFORE_BUILD: |
    pip install pybind11 ninja cmake && yum install -y gcc gcc-c++

  # Skip PPC tests due to lack of numpy/scipy wheel support
  CIBW_TEST_SKIP: "*-manylinux_{ppc64le}"

  # Use CentOS 7 image for PPC
  CIBW_MANYLINUX_PPC64LE_IMAGE: manylinux2014

jobs:
  linux-wheels-ppc64le:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [ppc64le]
    name: ubuntu-latest::ppc64le
    runs-on: ${{ matrix.os }}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - uses: docker/setup-qemu-action@v1
        name: Set up QEMU

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.3.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: ${{matrix.arch}}

      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/master' }}
        with:
          name: ${{ runner.os }}-wheels.zip
          path: ./wheelhouse/*.whl

  upload-pypi:
    needs: linux-wheels-ppc64le
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/master'}}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: Linux-wheels-ppc64le.zip
          path: dist

      - name: Upload wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
