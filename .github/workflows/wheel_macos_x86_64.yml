name: Wheel::MacOS::Intel

# **What it does**: Builds python wheels for MacOS (10.15) architecture x86_64 and store it as artifacts.
#                   Python versions: 3.7, 3.8, 3.9, 3.10, 3.11.
# **Why we have it**: To build wheels for pennylane-lightning installation.
# **Who does it impact**: Wheels to be uploaded to PyPI.

on:
  pull_request:
  push:
    branches:
      - master
  release:
    types: [published]

env:
  MACOSX_DEPLOYMENT_TARGET: 10.15

jobs:
  set_wheel_build_matrix:
    name: "Set wheel build matrix"
    uses: ./.github/workflows/set_wheel_build_matrix.yml
    with:
      event_name: ${{ github.event_name }}

  build_dependencies:
    needs: [set_wheel_build_matrix]
    strategy:
      matrix:
        os: [macos-11]
        arch: [x86_64]
        exec_model: ${{ fromJson(needs.set_wheel_build_matrix.outputs.exec_model) }}
        kokkos_version: ${{ fromJson(needs.set_wheel_build_matrix.outputs.kokkos_version) }}

    name: Kokkos core & kernels (${{ matrix.exec_model }}::${{ matrix.arch }} )
    runs-on: ${{ matrix.os }}

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - name: Cache installation directories
        id: kokkos-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace}}/Kokkos_install/${{ matrix.exec_model }}
          key: ${{ matrix.os }}-kokkos${{ matrix.kokkos_version }}-${{ matrix.exec_model }}

      - name: Install clang
        run: brew install llvm

      - name: Clone Kokkos libs
        if: steps.kokkos-cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/kokkos/kokkos.git
          cd kokkos
          git checkout ${{ matrix.kokkos_version }}
          cd -
          pushd . &> /dev/null
          git clone https://github.com/kokkos/kokkos-kernels.git
          cd kokkos-kernels
          git checkout ${{ matrix.kokkos_version }}
          cd -

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build Kokkos core library
        if: steps.kokkos-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ github.workspace}}/Kokkos_install/${{ matrix.exec_model }}
          cd kokkos
          python -m pip install cmake ninja

          cmake -BBuild . -DCMAKE_INSTALL_PREFIX=${{ github.workspace}}/Kokkos_install/${{ matrix.exec_model }} \
                          -DKokkos_ENABLE_COMPLEX_ALIGN=OFF \
                          -DKokkos_ENABLE_${{ matrix.exec_model }}=ON \
                          -DKokkos_ENABLE_DEPRECATION_WARNINGS=OFF \
                          -DCMAKE_CXX_STANDARD=20 \
                          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                          -DCMAKE_CXX_COMPILER=$(brew --prefix llvm)/bin/clang++ \
                          -G Ninja
          cmake --build ./Build --verbose
          cmake --install ./Build
          cd -

      - name: Build Kokkos kernels library
        if: steps.kokkos-cache.outputs.cache-hit != 'true'
        run: |
          cd kokkos-kernels
          python -m pip install cmake ninja

          cmake -BBuild . -DCMAKE_INSTALL_PREFIX=${{ github.workspace}}/Kokkos_install/${{ matrix.exec_model }} \
                          -DKokkos_ENABLE_${{ matrix.exec_model }}=ON \
                          -DKokkos_ENABLE_DEPRECATION_WARNINGS=OFF \
                          -DCMAKE_CXX_STANDARD=20 \
                          -DCMAKE_PREFIX_PATH=${{ github.workspace}}/Kokkos_install/${{ matrix.exec_model }} \
                          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                          -DCMAKE_CXX_COMPILER=$(brew --prefix llvm)/bin/clang++ \
                          -G Ninja
          cmake --build ./Build --verbose
          cmake --install ./Build
          cd -

  mac-wheels-x86:
    needs: [set_wheel_build_matrix, build_dependencies]
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11]
        arch: [x86_64]
        cibw_build: ${{fromJson(needs.set_wheel_build_matrix.outputs.python_version)}}
        exec_model: ${{ fromJson(needs.set_wheel_build_matrix.outputs.exec_model) }}
        kokkos_version: ${{ fromJson(needs.set_wheel_build_matrix.outputs.kokkos_version) }}

    name: ${{ matrix.os }} (Python ${{ fromJson('{ "cp37-*":"3.7","cp38-*":"3.8","cp39-*":"3.9","cp310-*":"3.10","cp311-*":"3.11" }')[matrix.cibw_build] }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3

      - name: Restoring cached dependencies
        id: kokkos-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace}}/Kokkos_install/${{ matrix.exec_model }}
          key: ${{ matrix.os }}-kokkos${{ matrix.kokkos_version }}-${{ matrix.exec_model }}

      - name: Copy cached libraries
        run: |
          mkdir Kokkos
          cp -rf ${{ github.workspace }}/Kokkos_install/${{ matrix.exec_model }}/* Kokkos/

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel~=2.11.0

      - name: Build wheels
        env:
          CIBW_BUILD: ${{ matrix.cibw_build }}

          # MacOS specific build settings
          CIBW_BEFORE_ALL_MACOS: |
            brew uninstall --force oclint
            brew install libomp
            brew install llvm

          # Python build settings
          CIBW_BEFORE_BUILD: |
            pip install pybind11 ninja cmake~=3.24.0

          # Testing of built wheels
          CIBW_TEST_REQUIRES: numpy~=1.21 scipy pytest pytest-cov pytest-mock flaky

          CIBW_BEFORE_TEST: pip install git+https://github.com/PennyLaneAI/pennylane.git@master

          CIBW_TEST_COMMAND: |
            pl-device-test --device=lightning.qubit --skip-ops -x --tb=short --no-flaky-report

          CIBW_BUILD_VERBOSITY: 1

          CIBW_ARCHS_MACOS: ${{matrix.arch}}

          USE_OMP: 1

        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions-ecosystem/action-regex-match@v2
        id: rc_build
        with:
          text: ${{ github.event.pull_request.head.ref }}
          regex: '.*[0-9]+.[0-9]+.[0-9]+[-_]?rc[0-9]+'

      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/master' || steps.rc_build.outputs.match != ''}}
        with:
          name: ${{ runner.os }}-wheels-${{ matrix.arch }}.zip
          path: ./wheelhouse/*.whl

  upload-pypi:
    needs: mac-wheels-x86
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: macOS-wheels-x86_64.zip
          path: dist

      - name: Upload wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
