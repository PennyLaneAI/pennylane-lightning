name: Deploy
on:
  release:
    types: [published]

env:
  CIBW_BUILD: 'cp37-* cp38-* cp39-*'

  # MacOS specific build settings

  CIBW_BEFORE_ALL_MACOS: |
    brew cask uninstall --force oclint
    brew install gcc libomp

  # Python build settings

  CIBW_BEFORE_BUILD: |
    pip install numpy==1.19.5 scipy pybind11

  # Testing of built wheels
  CIBW_TEST_REQUIRES: numpy scipy pytest pytest-cov pytest-mock flaky

  CIBW_TEST_COMMAND: |
    pl-device-test --device=lightning.qubit --skip-ops -x --tb=short --no-flaky-report


jobs:

  build-wheels:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==1.5.5

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-wheels.zip
          path: ./wheelhouse/*.whl

  build-pure-python-wheel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PennyLane-Lightning
        uses: actions/checkout@v2
        with:
          path: main

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Build wheels
        run: |
          python -m pip install --upgrade pip wheel
          cd main
          python setup.py bdist_wheel
        env:
          SKIP_COMPILATION: True

      - uses: actions/upload-artifact@v2
        with:
          name: pure-python-wheels.zip
          path: main/dist/*.whl

  upload-wheels:
    runs-on: ubuntu-latest
    needs: [build-wheels, build-pure-python-wheel]
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: dist/

      - name: Publish
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI }}

  upload-source:
    runs-on: ubuntu-latest
    needs: [build-wheels, build-pure-python-wheel]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Build and install Plugin
        run: |
          python -m pip install --upgrade pip wheel
          python setup.py sdist

      - name: Publish
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI }}
