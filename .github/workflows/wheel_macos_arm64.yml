name: Wheel::MacOS::ARM

# **What it does**: Builds python wheels for MacOS (11) architecture ARM 64 and store it as artifacts.
#                   Python versions: 3.11, 3.12, 3.13.
# **Why we have it**: To build wheels for pennylane-lightning installation.
# **Who does it impact**: Wheels to be uploaded to PyPI.

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - master
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: wheel_macos_arm64-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set_wheel_build_matrix:
    if: |
      github.event_name != 'pull_request' ||
      (github.event.pull_request.draft == false && contains(github.event.pull_request.labels.*.name, 'ci:build_wheels'))
    name: "Set wheel build matrix"
    uses: ./.github/workflows/set_wheel_build_matrix.yml
    with:
      event_name: ${{ github.event_name }}

  mac-wheels-arm64:
    needs: [set_wheel_build_matrix]
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13]
        arch: [arm64]
        pl_backend: ["lightning_kokkos", "lightning_qubit"]
        cibw_build: ${{fromJson(needs.set_wheel_build_matrix.outputs.python_version)}}
    timeout-minutes: 30
    name: macos-latest::arm64 - ${{ matrix.pl_backend }} (Python ${{ fromJson('{ "cp311-*":"3.11","cp312-*":"3.12", "cp313-*":"3.13" }')[matrix.cibw_build] }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout PennyLane-Lightning
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: python -m pip install cibuildwheel~=3.1.4 tomlkit

      - name: Configure pyproject.toml file
        run: PL_BACKEND="${{ matrix.pl_backend }}" python scripts/configure_pyproject_toml.py

      - name: Build wheels
        env:
          CIBW_BUILD: ${{ matrix.cibw_build }}

          # MacOS specific build settings
          CIBW_BEFORE_ALL_MACOS: |
            brew uninstall --force oclint

          # Python build settings
          CIBW_BEFORE_BUILD: |
            python -m pip install ninja cmake setuptools

          CIBW_ENVIRONMENT: |
            CMAKE_ARGS="-DCMAKE_CXX_COMPILER_TARGET=arm64-apple-macos11 -DCMAKE_SYSTEM_NAME=Darwin -DCMAKE_SYSTEM_PROCESSOR=ARM64 -DENABLE_OPENMP=OFF -DCMAKE_BUILD_TYPE=Release"

          CIBW_BEFORE_TEST: |
            python -m pip install -r requirements-tests.txt
            if ${{ matrix.pl_backend == 'lightning_kokkos'}}
            then
              PL_BACKEND="lightning_qubit" python scripts/configure_pyproject_toml.py
              SKIP_COMPILATION=True python -m pip install . -vv
            fi
          CIBW_TEST_COMMAND: |
            DEVICENAME=`echo ${{ matrix.pl_backend }} | sed "s/_/./g"`
            pl-device-test --device=${DEVICENAME} --skip-ops -x --tb=short

          CIBW_BUILD_VERBOSITY: 3

          CIBW_ARCHS_MACOS: ${{ matrix.arch }}

        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Validate wheels
        run: |
          python -m pip install twine
          python -m twine check ./wheelhouse/*.whl

      - uses: actions/upload-artifact@v4
        if: |
          github.event_name == 'release' ||
          github.event_name == 'workflow_dispatch' ||
          github.ref == 'refs/heads/master'
        with:
          name: ${{ runner.os }}-wheels-${{ matrix.pl_backend }}-${{ fromJson('{ "cp311-*":"py311","cp312-*":"py312", "cp313-*":"py313" }')[matrix.cibw_build] }}-${{ matrix.arch }}.zip
          path: ./wheelhouse/*.whl
          retention-days: 1
          include-hidden-files: true

  upload-pypi:
    needs: [set_wheel_build_matrix, mac-wheels-arm64]
    strategy:
      matrix:
        arch: [arm64]
        pl_backend: ["lightning_qubit", "lightning_kokkos"]
        cibw_build: ${{ fromJson(needs.set_wheel_build_matrix.outputs.python_version) }}
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    if: |
      github.event_name == 'release' ||
      github.ref == 'refs/heads/master'

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: macOS-wheels-${{ matrix.pl_backend }}-${{ fromJson('{ "cp311-*":"py311","cp312-*":"py312", "cp313-*":"py313" }')[matrix.cibw_build] }}-${{ matrix.arch }}.zip
          path: dist

      - name: Upload wheels to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          repository-url: https://test.pypi.org/legacy/
