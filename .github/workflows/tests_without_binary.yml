name: Testing without binary
on:
  push:
    branches:
      - master
  pull_request:

env:
  COVERAGE_FLAGS: "--cov=pennylane_lightning --cov-report=term-missing --cov-report=xml:./coverage.xml --no-flaky-report -p no:warnings --tb=native"

concurrency:
  group: tests_without_binary-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pythontests:
    name: Python tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        pl_backend: ["lightning_qubit, lightning_kokkos"]

    steps:
      - name: Checkout PennyLane-Lightning
        uses: actions/checkout@v3
        with:
          path: main

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.9'

      - name: Get required Python packages
        run: |
          cd main
          python -m pip install -r requirements-dev.txt

      - name: Install lightning.qubit device
        run: |
          cd main
          PL_BACKEND=${{ matrix.pl_backend }} python -m pip install -e . -vv
        env:
          SKIP_COMPILATION: True

      - name: Run PennyLane-Lightning unit tests
        run: |
          cd main/
          DEVICENAME=`echo ${{ matrix.pl_backend }} | sed "s/_/./g"`
          PL_DEVICE=${DEVICENAME} python -m pytest tests/ $COVERAGE_FLAGS
          pl-device-test --device ${DEVICENAME} --skip-ops --shots=20000 $COVERAGE_FLAGS --cov-append
          pl-device-test --device ${DEVICENAME} --shots=None --skip-ops $COVERAGE_FLAGS --cov-append

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./main/coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}