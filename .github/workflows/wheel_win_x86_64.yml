name: Wheel::Windows::x86_64
on:
  push:
    branches:
      - master
  pull_request:
  release:

env:
  CIBW_BUILD: 'cp37-* cp38-* cp39-*'

  CIBW_ARCHS_WINDOWS: "AMD64"

  # Python build settings
  CIBW_BEFORE_BUILD: |
    call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && pip install pybind11 ninja

  # Testing of built wheels
  CIBW_TEST_REQUIRES: numpy==1.19.5 scipy pytest pytest-cov pytest-mock flaky

  CIBW_BEFORE_TEST: |
    call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && python -c "import sys; print(sys.path)"

  CIBW_TEST_COMMAND: |
    pl-device-test --device=lightning.qubit --skip-ops -x --tb=short --no-flaky-report

jobs:
  win-wheels:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Get git branch name
        id: branch-name
        uses: tj-actions/branch-names@v5

      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0

      - uses: actions-ecosystem/action-regex-match@v2
        id: rc_build
        with:
          text: ${{ github.event.pull_request.head.ref }}
          regex: '.*[0-9]+.[0-9]+.[0-9]+[-]?rc[0-9]+'

      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/master' || steps.rc_build.outputs.match != ''}}
        with:
          name: ${{ runner.os }}-wheels.zip
          path: ./wheelhouse/*.whl
